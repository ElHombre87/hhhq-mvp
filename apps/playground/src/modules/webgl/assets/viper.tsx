/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Mesh: THREE.Mesh;
    Mesh_1: THREE.Mesh;
  };
  materials: {
    ["01 - Default1"]: THREE.MeshStandardMaterial;
    ["<Gray6>"]: THREE.MeshStandardMaterial;
  };
};

export function Viper(props: JSX.IntrinsicElements["group"] & { meshRef: React.MutableRefObject<THREE.Group>}) {
  const { nodes, materials } = useGLTF("/viper.gltf") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group
        ref={props.meshRef}
        name="colmftr1co_001"
        position={[0, 4.781, 0]}
        scale={0.025}
        userData={{ name: "colmftr1co_001" }}
      >
        <mesh
          name="Mesh"
          castShadow
          receiveShadow
          geometry={nodes.Mesh.geometry}
          material={materials["01 - Default1"]}
        />
        <mesh
          name="Mesh_1"
          castShadow
          receiveShadow
          geometry={nodes.Mesh_1.geometry}
          material={materials["<Gray6>"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/viper.gltf");
